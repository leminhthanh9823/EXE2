import Chat from "../models/chat.model.js";
import User from "../models/user.model.js"; // Import model User n·∫øu b·∫°n c√≥

// L·∫•y t·∫•t c·∫£ tin nh·∫Øn
export const getMessages = async (req, res) => {
  try {
    const messages = await Chat.find().sort({ createdAt: 1 });
    res.status(200).json(messages);
  } catch (error) {
    res.status(500).json({ message: "Server error" });
  }
};

export const sendMessage = async (req, res) => {
  const { userName, message, to } = req.body;
  try {
    const newMessage = new Chat({ userName, message, to });
    await newMessage.save();

    // üî¥ G·ª≠i tin nh·∫Øn qua socket.io
    req.app.get("io").emit("message", newMessage);

    res.status(201).json(newMessage);
  } catch (error) {
    res.status(500).json({ message: "Server error" });
  }
};

// G·ª≠i th√¥ng tin kh√°ch h√†ng
export const sendCustomerInfo = async (req, res) => {
  const { to } = req.body;
  try {
    const user = await User.findOne({ name: to });

    if (!user) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng" });
    }

    const formatArray = (arr) =>
      arr && arr.length > 0 ? arr.join(", ") : "Ch∆∞a cung c·∫•p th√¥ng tin";

    const infoMessage = `Th√¥ng tin kh√°ch h√†ng: \n
      - T√™n: ${user.name} \n
      - Email: ${user.email} \n
      - Gi·ªõi t√≠nh: ${user.sex ?? "Ch∆∞a cung c·∫•p th√¥ng tin"} \n
      - age: ${user.sex ?? "Ch∆∞a cung c·∫•p th√¥ng tin"} \n
      - Chi·ªÅu cao: ${user.height ?? "Ch∆∞a cung c·∫•p th√¥ng tin"} \n
      - C√¢n n·∫∑ng: ${user.weight ?? "Ch∆∞a cung c·∫•p th√¥ng tin"} \n
      - D·ªã ·ª©ng: ${formatArray(user.health_base?.food_allergies)} \n
      - ƒêi·ªÅu ki·ªán c∆° b·∫£n: ${formatArray(
        user.health_base?.underlying_conditions
      )} \n
      - M·ª•c ti√™u mong mu·ªën: ${user.health_goals ?? "Ch∆∞a cung c·∫•p th√¥ng tin"} \n
      - Ngh·ªÅ nghi·ªáp: ${user.current_job ?? "Ch∆∞a cung c·∫•p th√¥ng tin"} 
    `;

    const newMessage = new Chat({
      userName: "Admin",
      message: infoMessage,
      to,
    });
    await newMessage.save();
    req.app.get("io").emit("message", newMessage);

    res.status(201).json(newMessage);
  } catch (error) {
    res.status(500).json({ message: "L·ªói server" });
  }
};
